#!/usr/bin/env ruby

require "optparse"

def dot_notation(edges)
      string = <<-DOT
digraph cronjob {
  rankdir=LR; /* This should be configurable */
  node [shape = circle];
  #{edges}
}
      DOT
end

params = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: aasm_graph [options] ClassName1 ClassName2 ..."
  opts.on( '-I', '--include PATH', 'Include paths in the load path' ) do |path|
    paths = path.split(':')
    paths.each do |path|
      $:.unshift(path)
    end
  end

  opts.on('-R', '--require FILE', 'Require files') do |path|
    require path
  end
end
optparse.parse!

ARGV.each do |name|
  # This needs to handle namespace class names
  klass = Object.const_get(name)
  edges = ""
  if initial = klass.aasm.initial_state
    edges << "initial [shape=point];\n"
    edges << "initial -> #{initial};\n"
  end
  klass.aasm.events.each do |event|
    event.transitions.each do |transition|
      edges << "#{transition.from} -> #{transition.to} [ label = \"#{event.name}\" ];\n"
    end
  end
  puts dot_notation(edges)
  `echo  "#{dot_notation(edges)}" | dot -Tjpg -o #{name.downcase}.jpg` unless edges.empty?
end
